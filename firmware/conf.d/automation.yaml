script:
  - id: clear_filament_settings
    then:
      # publish to select template filament_brand
      - select.set:
          id: filament_brand
          option: ""
      - text_sensor.template.publish:
          id: filament_brand_code
          state: ""
      - select.set:
          id: filament_color
          option: ""
      - text_sensor.template.publish:
          id: filament_type
          state: ""
      - text_sensor.template.publish:
          id: filament_color_hex
          state: ""
  - id: serialize_rfid_raw_data
    then:
      - text_sensor.template.publish:
          id: filament_raw_data
          state: !lambda |-
            auto data = json::build_json([=](JsonObject root) {
              root["protocol"] = "openspool";
              root["version"] = "1.0";
              root["color"] = id(filament_color).state.c_str();
              root["type"] = id(filament_type).state.c_str();
            });
            return data;
  - id: publish_filament_setting
    then:
      - if:
          condition:
            and:
              - lambda: 'return id(filament_color).state != "";'
              - lambda: 'return id(filament_color_hex).state != "";'
              - lambda: 'return id(filament_type).state != "";'
              - lambda: 'return id(filament_brand).state != "";'
              - lambda: 'return id(filament_brand_code).state != "";'
          then:
            - mqtt.publish:
                topic: device/${bambu_serial_number}/request
                payload: !lambda |-
                  auto data = json::build_json([=](JsonObject root) {
                    auto print = root.createNestedObject("print");
                    print["sequence_id"] = "0";
                    print["command"] = "ams_filament_setting";
                    print["ams_id"] = 255;
                    print["tray_id"] = 254;
                    print["tray_color"] = id(filament_color_hex).state.c_str();
                    print["nozzle_temp_min"] = 190;
                    print["nozzle_temp_max"] = 220;
                    //print["tray_type"] = id(filament_type).state.c_str();
                    print["setting_id"] = "";
                    print["tray_info_idx"] = id(filament_brand_code).state.c_str();
                    print["tray_type"] = id(filament_type).state.c_str();
                    //print["tray_sub_brands"] = "TPU";

                  });
                  ESP_LOGI("main", "Publishing %s", data.c_str());
                  return data;
