select:
  #TODO: printer model is currently unused, but will be needed for setting AMS type
  - platform: template
    name: Printer Model
    id: bambu_model
    options:
      - "A1Mini"
      - "A1"
      - "P1P/P1S"
      - "X1C/X1E"
    optimistic: true
    restore_value: true
    state_topic:
    icon: mdi:printer-3d
    web_server:
      sorting_group_id: sorting_group_printer_settings

text:
  - platform: template
    id: bambu_serial_number
    state_topic:
    name: Printer Serial Number
    optimistic: true
    mode: text
    restore_value: true
    icon: mdi:barcode
    web_server:
      sorting_group_id: sorting_group_printer_settings
    # on_value:
    #   then:
    #       - script.execute: check_mqtt_creds #TODO: Enable once this is merged: https://github.com/esphome/esphome/pull/7716
    #     lambda: |-
    #       id(bambu_printer_status).topic = "device/" + x + "/report";

  - platform: template
    id: bambu_lan_access_code
    state_topic:
    name: Printer Lan Access Code
    optimistic: true
    mode: password
    restore_value: true
    icon: mdi:lock
    web_server:
      sorting_group_id: sorting_group_printer_settings
    on_value:
      then:
        lambda: |-
          id(bambu_mqtt).set_password(x.c_str());
  #     - script.execute: check_mqtt_creds #TODO: Enable once this is merged: https://github.com/esphome/esphome/pull/7716
  - platform: template
    id: bambu_ip_address
    state_topic:
    name: Printer IP Address
    optimistic: true
    mode: text
    restore_value: true
    icon: mdi:ip
    web_server:
      sorting_group_id: sorting_group_printer_settings
    on_value:
      then:
        lambda: |-
          id(bambu_mqtt).set_broker_address(x.c_str());
  #       - script.execute: check_mqtt_creds #TODO: Enable once this is merged: https://github.com/esphome/esphome/pull/7716

  - platform: template
    name: "OpenSpool URL"
    id: openspool_url
    state_topic:
    icon: mdi:web
    mode: text
    web_server:
      sorting_group_id: sorting_group_printer_settings
    lambda: |-
      std::string mac = id(mac_address).state;
      // Extract just the last 6 characters (3 pairs of hex digits)
      std::string last_6 = mac.substr(15, 2) + mac.substr(12, 2) + mac.substr(9, 2);
      return {"http://openspool-" + last_6 + ".local"};
    set_action:
      - lambda: |-
          id(openspool_url).publish_state(x);
button:
  - platform: restart
    name: "Restart OpenSpool"
    id: restart_openspool
    state_topic:
    entity_category: diagnostic

  - platform: template
    name: "Write URL to NFC"
    id: write_url_button
    icon: mdi:web
    web_server:
      sorting_group_id: sorting_group_rfid
    on_press:
      then:
        lambda: |-
          auto message = std::make_unique<nfc::NdefMessage>();
          auto url_record = std::make_unique<nfc::NdefRecord>();
          url_record->set_tnf(nfc::TNF_WELL_KNOWN);
          url_record->set_type("U");
          url_record->set_payload(id(openspool_url).state);
          message->add_record(std::move(url_record));

          id(rfid_reader_spi_0).write_mode(message.get());
          ESP_LOGI("rfid", "Wrote URL to NFC tag: %s", id(openspool_url).state.c_str());
#TODO: Show the current state of the printer

# ACTION_IDS = {
#     "default": "Unknown",
#     -1: "Idle",
#     0: "Printing",
#     1: "Auto Bed Leveling",
#     2: "Heatbed Preheating",
#     3: "Sweeping XY Mech Mode",
#     4: "Changing Filament",
#     5: "M400 Pause",
#     6: "Paused due to filament runout",
#     7: "Heating Hotend",
#     8: "Calibrating Extrusion",
#     9: "Scanning Bed Surface",
#     10: "Inspecting First Layer",
#     11: "Identifying Build Plate Type",
#     12: "Calibrating Micro Lidar",
#     13: "Homing Toolhead",
#     14: "Cleaning Nozzle Tip",
#     15: "Checking Extruder Temperature",
#     16: "Printing was paused by the user",
#     17: "Pause of front cover falling",
#     18: "Calibrating Micro Lidar",
#     19: "Calibrating Extrusion Flow",
#     20: "Paused due to nozzle temperature malfunction",
#     21: "Paused due to heat bed temperature malfunction"
#     255: A1 mini uses this, most likely as idle
# }
